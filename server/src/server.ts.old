import express from 'express';
import path from 'node:path';
import db from './config/connection.js';
import routes from './routes/index.js';
import dotenv from 'dotenv';

import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

dotenv.config({ path: path.resolve(__dirname, '../.env') });

const app = express();
const PORT = process.env.PORT || 3001;

app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// if we're in production, serve client/build as static assets
console.log('NODE_ENV is:', process.env.NODE_ENV);
if (process.env.NODE_ENV === 'production') {
  console.log('We are in production mode!');
  app.use(express.static(path.join(__dirname, '../../client/dist')));
}

// app.get('*', (_req, res) => {
//   res.sendFile(path.join(__dirname, '../../client/build/index.html'));
// });


app.use(routes);

// Important for MERN Setup: Any client-side requests that begin with '/graphql' will be handled by our Apollo Server
app.use('/graphql', expressMiddleware(server));

db.once('open', () => {
  app.listen(PORT, () => console.log(`🌍 Now listening on localhost:${PORT}`));
});
